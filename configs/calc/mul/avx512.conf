register_size 512
{
  base_types = {"uint64_t", "uint32_t", "uint16_t", "float", "double"}
  # provide one implementation for each base_type, use the same sequence as for base_types
  implementations = {"return _mm512_mullox_epi64(p_vec1, p_vec2);", "return _mm512_mul_epu32(p_vec1 , p_vec2);", "return _mm512_mullo_epi16(p_vec1, p_vec2);", "return _mm512_mul_ps(p_vec1, p_vec2);", "return _mm512_mul_pd(p_vec1 , p_vec2);"} 
  # number of specialized template parameters excluding the processing style
  nr_additional_template_parameters = 1
  # additional template specializations. If there is more than 1 template argument and more than 1 base type, follow this sequence: {base type 1/argument1, base type 1/argument 2, ..., base type n/argument 1, base type n/argument 2,..., base type n/argument m} 
  template_parameters = {"64", "32", "16", "8", "32", "64"}
}